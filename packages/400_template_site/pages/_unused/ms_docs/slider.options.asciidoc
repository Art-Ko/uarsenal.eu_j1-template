== Slider options

You can use/change following options in slider setup method. For example:

[source, html]
----
<script>
    var slider = new MasterSlider();
    slider.setup('masterslider' , {
            width:800,    // slider standard width
            height:350,   // slider standard height
            space:5,
            fullwidth:true,
            autoHeight:true,
            view:"mask"
            // more slider options goes here...
        });
    // adds Arrows navigation control to the slider.
    slider.control('arrows');
</script>
----

.Slider options
[cols="3,3a,6a", subs=+macros, options="header", width="100%", role="rtable mt-3"]
|===
|Option |Default Value |Description

|`width`
|300
|The base width of slides. It helps the slider to resize in correct
ratio.


| `height`
| 150
|
The base height of slides, It helps the slider to resize in correct
ratio.

| `start`
| 1
|
The slider starting slide number.

| `space`
| 0
|
The spacing value between slides in pixels.

| `grabCursor`
| true
|
Whether the slider uses grab mouse cursor.

| `swipe`
| true
|
Whether the drag/swipe navigation is enabled.

| `mouse`
| true
|
Whether the user can use mouse drag navigation.

| `wheel`
| false
|
Enables mouse scroll wheel navigation.

| `keyboard`
| false
|
Enables keyboard navigation.

| `autoplay`
| false
|
Enables the autoplay slideshow.

| `loop`
| false
|
Enables the continuous sliding mode.

| `shuffle`
| false
|
Enables the shuffle slide order.

| `preload`
| 0
|
Specifies number of slides which will be loaded by slider. 0 value means
slider will load slides in sequence and "all" value means slider will
load all of the slides at starting. This option is only effective for
images which has "data-src" attribute.

| layout
| "boxed"
|
Specifies layout of the slider, it accepts following values:

* `boxed` -- The default layout of slider, size of the slider does not
  exceed the specified width and height in slider options.
* `fullwidth` -- Forces the slider to adapt width to the browser width.
* `fullscreen` -- Forces the slider to adapt width and height to the
  browser window dimension.
* `fillwidth` -- Enables the slider to adapt width to its parent element.
* `autofill` -- Enables the slider to adapt width and height to its parent
  element.
* `partialview` -- It's like the boxed layout but nearby slides are always
  visible.

| `fullscreenMargin`
| 0
|
Specifies margin space at the bottom of slider, it only affects with
"fullscreen" layout.

| `heightLimit`
| false
|
It force the slide to use max height value as its base specified height
value.

| `autoHeight`
| false
|
Whether the slider adapts its height to each slide height or not. It
overrides heightLimit option.

| `smoothHeight`
| true
|
Whether the slider uses smooth animation while its height changes.

| `endPause`
| false
|
Whether the slider pauses slideshow when it reaches to last slide.

| `overPause`
| false
|
Whether the slider pauses slideshow on hover.

| `fillMode`
| fill
|
Specifies the slide background scaling method. Its acceptable values are
"fill", "fit", "stretch", "center" and "tile".

| `centerControls`
| true
|
Whether the slider aligns UI controls to center. This option is only
effective in full width mode.

| `layersMode`
| center
|
It accepts two values "center" and "full". The "center" value indicates
that the slider aligns layers to the center. This option is only
effective in full width mode.

| `instantStartLayers`
| false
|
Whether start show transition of layers before slide transition
complete.

| `parallaxMode`
| mouse
|
Specifies type of layers parallax move, it accepts below values:

* `mouse` -- It moves the layers while mouse is moving
* `swipe` -- It moves layers while slider is sliding or swiping.
* `mouse:x-only` -- It moves the layers only on X-axis while mouse is
  moving (horizontally moves).
* `mouse:y-only` -- It moves the layers only on Y-axis while mouse is
  moving (vertically moves).

| `filters`
| null
|
Applys CSS3 filters to slide transition views. For more information
check link:http://www.masterslider.com/doc/#filters[Adding CSS3 filters, {browser-window--new}]

Available filters: +

* blur, default: 0
* brightness, default: 1
* contrast, default: 1
* grayscale, default: 0
* hue-rotate, default: 0
* invert, default: 0
* opacity, defalt: 1
* saturate, default: 1
* sepia, default: 0

| `applyFiltersAllSlides`
| false
|
Filters are applied to all (background) images of a slider except the
active (visible/selected) slide on position 0. If applyFiltersAllSlides is
set to `true`, filters are set on all images *including* the *active*
slide. This can be used for example to transform the images to grayscale,
sepia etc. +

WARNING: Available on for J1 Template (MS Lite version).

| `duoColor`
| false
|
Transforms a slider (background images) in a duo-color style. +

WARNING: Available on for J1 Template (MS Lite version).

| `hideLayers`
| false
|
Whether the slider hides all layers before changing slide.

| `speed`
| 17
|
Specifies slide changing speed. It accepts float values between 0 and
100.

| `dir`
| h
|
Specifies slide changing direction. It accepts two values "h"
(horizontal) and "v" (vertical).

| `view`
| basic
|
The slide changing transition. Available settings are: +
"fade", "mask", "wave", "flow",  "stack", "scale" +
"focus", "parallaxMask", "partialWave", "fadeBasic", "fadeWave", "fadeFlow" +

link:http://www.masterslider.com/doc/#views[More info here..., {browser-window--new}] +

NOTE: Other parameters than "basic" are only available for the *professional*
version of MS.

| `deepLink`
| null
|
A unique name for the slider which will be used in browser address bar
you can enter your own name otherwise slider generates a unique one.

| `deepLinkType`
| "path"
|
Specifies the type of displaying slider deeplinking permalink in the
address bar. acceptable values: "paht" and "query"

| `startOnAppear`
| false
|
It initializes slider when slider comes inside of browser window when
scrolling.

|===


== CSS Filter Functions

// See: https://developer.mozilla.org/en-US/docs/Web/CSS/filter#filter_functions

The filter property is specified as none or one or more of the functions
listed below. If the parameter for any function is invalid, the function
returns none. Except where noted, the functions that take a value expressed
with a percent sign (as in 34%) also accept the value expressed as decimal
(as in 0.34).

=== blur()

The blur() function applies a Gaussian blur to the input image. The value
of radius defines the value of the standard deviation to the Gaussian
function, or how many pixels on the screen blend into each other, so a
larger value will create more blur. The initial value for interpolation is 0.
The parameter is specified as a CSS length, but does not accept percentage
values.

.Examples
[source, css]
----
filter: blur(5)
filter: blur(50)
----

=== brightness()

The brightness() function applies a linear multiplier to the input image,
making it appear more or less bright. A value of 0% will create an image
that is completely black. A value of 100% leaves the input unchanged. Other
values are linear multipliers on the effect. Values of an amount over 100%
are allowed, providing brighter results. The initial value for interpolation
is 1.

.Examples
[source, css]
----
filter: brightness(1)
filter: brightness(0.3)
----

=== contrast()

The contrast() function adjusts the contrast of the input image. A value
of 0% will create an image that is completely gray. A value of 100% leaves
the input unchanged. Values of an amount over 100% are allowed, providing
results with more contrast. The initial value for interpolation is 1.

.Examples
[source, css]
----
filter: contrast(2)
----

=== grayscale()

The grayscale() function converts the input image to grayscale. The value
of amount defines the proportion of the conversion. A value of 100% is
completely grayscale. A value of 0% leaves the input unchanged. Values
between 0% and 100% are linear multipliers on the effect. The initial value
for interpolation is 0.

.Examples
[source, css]
----
filter: grayscale(1)
filter: grayscale(0.5)
----

=== hue-rotate()

The hue-rotate() function applies a hue rotation on the input image. The value
of angle defines the number of degrees around the color circle the input
samples will be adjusted. A value of 0deg leaves the input unchanged. The initial value for interpolation is 0. Though there is no maximum value; the effect of values above 360deg wraps around.

.Examples
[source, css]
----
filter: hue-rotate(90)
----

=== invert()

The invert() function inverts the samples in the input image. The value of
amount defines the proportion of the conversion. A value of 100% is completely
inverted. A value of 0% leaves the input unchanged. Values between 0% and 100%
are linear multipliers on the effect. The initial value for interpolation is 0.

.Examples
[source, css]
----
filter: invert(100%)
filter: invert(1)
filter: invert(0.6)
----

=== opacity()

The opacity() function applies transparency to the samples in the input image.
The value of amount defines the proportion of the conversion. A value of 0%
is completely transparent. A value of 100% leaves the input unchanged. Values
between 0% and 100% are linear multipliers on the effect. This is equivalent
to multiplying the input image samples by amount. The initial value for
interpolation is 1. This function is similar to the more established opacity
property; the difference is that with filters, some browsers provide hardware
acceleration for better performance.

.Examples
[source, css]
----
filter: opacity(1)
filter: opacity(0.5)
----

=== saturate()

The saturate() function saturates the input image. The value of amount
defines the proportion of the conversion. A value of 0% is completely
un-saturated. A value of 100% leaves the input unchanged. Other values are
linear multipliers on the effect. Values of amount over 100% are allowed,
providing super-saturated results. The initial value for interpolation is 1.

[source, css]
----
filter: saturate(200%)
----

.Examples
=== sepia()

The sepia() function converts the input image to sepia. The value of amount
defines the proportion of the conversion. A value of 100% is completely sepia.
A value of 0% leaves the input unchanged. Values between 0% and 100% are
linear multipliers on the effect. The initial value for interpolation is 0.

[source, css]
----
filter: sepia(1)
filter: sepia(0.5)
----

=== Combining functions

You may combine any number of functions to manipulate the rendering. The
following example enhances the contrast and brightness of the image:

.Example
[source, css]
----
filter: grayscale(0.5) sepia(0.5)
----
