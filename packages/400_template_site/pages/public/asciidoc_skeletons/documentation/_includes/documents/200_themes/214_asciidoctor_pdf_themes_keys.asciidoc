== Keys

This section lists all the keys that are available when creating a custom
theme. The keys are organized by category. Each category represents a common
prefix under which the keys are typically nested.

TIP: Keys can be nested wherever an underscore (`_`) appears in the name.
This nested structure is for organizational purposes only. All keys are
flatted when the theme is loaded (e.g., `align` nested under `base` becomes
`base_align`).

The converter uses the values of these keys to control how most elements are
arranged and styled in the PDF. The default values listed in this section
get inherited from the {uri-asciidoctor-pdf-base-theme}[base theme, {browser-window--new}].

IMPORTANT: The {uri-asciidoctor-pdf-default-theme}[default theme, {browser-window--new}]
has a different set of values which are not shown in this guide.

When creating a theme, all keys are optional. Required keys are provided by
the base theme. Therefore, you only have to declare keys that you want to
override.

[#keys-page]
=== Page

The keys in this category control the size, margins and background of each
page (i.e., canvas). We recommended that you define this category before all
other categories.

NOTE: The background of the title page can be styled independently.

include::../../tables/220_themes/keys-page.asciidoc[]


[#keys-base]
=== Base

The keys in this category provide generic theme settings and are often
referenced throughout the theme file as variables. We recommended that you
define this category after the page category and before all other categories.

NOTE: While it's common to define additional keys in this category (e.g.,
`base_border_radius`) to keep your theme DRY, we recommend using
custom variables instead.

include::../../tables/220_themes/keys-base.asciidoc[]

[#keys-vertical-spacing]
=== Vertical Spacing

The keys in this category control the general spacing between elements where
a more specific setting is not designated.

include::../../tables/220_themes/keys-vertical-spacing.asciidoc[]


[#keys-link]
=== Link

The keys in this category are used to style hyperlink text.

include::../../tables/220_themes/keys-link.asciidoc[]


[#keys-literal]
=== (Inline) Literal

The keys in this category are used for inline monospaced text in prose and
table cells.

include::../../tables/220_themes/keys-literal.asciidoc[]


[#keys-heading]
=== Heading

The keys in this category control the style of most headings, including part
titles, chapter titles, sections titles, the table of contents title and
discrete headings.

include::../../tables/220_themes/keys-heading.asciidoc[]


[#keys-title-page]
=== Title Page

The keys in this category control the style of the title page as well as the
arrangement and style of the elements on it.

TIP: The title page can be disabled from the document by setting the `notitle`
attribute in the AsciiDoc document header.

include::../../tables/220_themes/keys-title-page.asciidoc[]


[#keys-prose]
=== Prose

The keys in this category control the spacing around paragraphs (paragraph
blocks, paragraph content of a block, and other prose content). Typically,
all the margin is placed on the bottom.

include::../../tables/220_themes/keys-prose.asciidoc[]

[#keys-callout-numbers]
=== Callout Numbers

The keys in this category are used to control the style of callout numbers
(conums) inside verbatim blocks and in callout lists (colists).

include::../../tables/220_themes/keys-callout-numbers.asciidoc[]


[#keys-menu]
=== Menu

The keys in this category apply to the menu label (generated from the inline
menu macro).

include::../../tables/220_themes/keys-menu.asciidoc[]

[#keys-block]
=== Block Elements

The keys in this category control the spacing around block elements when a
more specific setting is not designated.

include::../../tables/220_themes/keys-block.asciidoc[]

Block styles are applied to the following block types:

[cols="3*a",grid=none,frame=none]
|===
|
* admonition
* example
* quote
|
* verse
* sidebar
* image
|
* listing
* literal
* table
|===


[#keys-caption]
==== Caption

The keys in this category control the arrangement and style of block captions.

include::../../tables/220_themes/keys-caption.asciidoc[]


[#keys-code]
==== Code

The keys in this category are used to control the style of literal, listing
and source blocks.

include::../../tables/220_themes/keys-code.asciidoc[]


[#keys-blockquote]
==== Quote

The keys in this category control the arrangement and style of quote blocks.

include::../../tables/220_themes/keys-blockquote.asciidoc[]


[#keys-sidebar]
==== Sidebar

The keys in this category control the arrangement and style of sidebar blocks.

include::../../tables/220_themes/keys-sidebar.asciidoc[]


[#keys-example]
==== Example

The keys in this category control the arrangement and style of example blocks.

include::../../tables/220_themes/keys-example.asciidoc[]


[#keys-admonition]
==== Admonition

The keys in this category control the arrangement and style of admonition
blocks and the icon used for each admonition type.

include::../../tables/220_themes/keys-admonition.asciidoc[]


[#keys-image]
==== Image block

The keys in this category control the arrangement of block images.

include::../../tables/220_themes/keys-image.asciidoc[]


[#keys-lead]
=== Lead

The keys in this category control the styling of lead paragraphs.

include::../../tables/220_themes/keys-lead.asciidoc[]


[#keys-abstract]
=== Abstract

The keys in this category control the arrangement and style of the abstract.

include::../../tables/220_themes/keys-abstract.asciidoc[]


[#keys-thematic-break]
=== Thematic Break

The keys in this category control the style of thematic breaks (aka horizontal
rules).

include::../../tables/220_themes/keys-thematic-break.asciidoc[]


[#keys-description-list]
=== Description List

The keys in this category control the arrangement and style of definition
list items (terms and descriptions).

include::../../tables/220_themes/keys-description-list.asciidoc[]

[#keys-outline-list]
=== Outline List

The keys in this category control the arrangement and style of outline
list items.

include::../../tables/220_themes/keys-outline-list.asciidoc[]


[#keys-table]
=== Table

The keys in this category control the arrangement and style of tables and
table cells.

include::../../tables/220_themes/keys-table.asciidoc[]


[#keys-table-of-contents]
=== Table of Contents

The keys in this category control the arrangement and style of the table of
contents.

include::../../tables/220_themes/keys-table-of-contents.asciidoc[]


[#keys-running-content]
=== Running Content

The keys in this category control the arrangement and style of running header
and footer content.

include::../../tables/220_themes/keys-running-content.asciidoc[]


==== Attribute References

You can use _any_ attribute defined in your AsciiDoc document (such as
`doctitle`) in the content of the running header and footer. In addition,
the following attributes are also available when defining the content keys
in the footer:

* page-count
* page-number
* document-title
* document-subtitle
* part-title
* chapter-title
* section-title
* section-or-chapter-title

You can also built-in AsciiDoc text replacements like `+(C)+`, numeric
character references like `+&#169;+` and inline formatting (e.g., bold,
italic, monospace).

Here's an example that shows how attributes and replacements can be used in
the running footer:

[source,yaml]
----
header:
  height: 0.75in
  line_height: 1
  recto:
    center:
      content: '(C) ACME -- v{revnumber}, {docdate}'
  verso:
    center:
      content: $header_recto_center_content
footer:
  height: 0.75in
  line_height: 1
  recto:
    right:
      content: '{section-or-chapter-title} | *{page-number}*'
  verso:
    left:
      content: '*{page-number}* | {chapter-title}'
----

You can split the content value across multiple lines using YAML's multiline
string syntax. In this case, the single quotes around the string are not
necessary. To force a hard line break in the output, add `{sp}+` to the end
of the line in normal AsciiDoc fashion.

[source,yaml]
----
footer:
  height: 0.75in
  line_height: 1.2
  recto:
    right:
      content: |
        Section Title - Page Number +
        {section-or-chapter-title} - {page-number}
  verso:
    left:
      content: |
        Page Number - Chapter Title +
        {page-number} - {chapter-title}
----

TIP: You can use most AsciiDoc inline formatting in the values of these keys.
For instance, to make the text bold, surround it in asterisks (as shown above).
One exception to this rule are inline images, which are described in the next
section.

==== Images

You can add an image to the running header or footer using the AsciiDoc inline
image syntax. Note that the image must be the whole value for a given position
(left, center or right). It cannot be combined with text.

Here's an example of how to use an image in the running header (which also
applies for the footer).

[source,yaml,subs=attributes+]
----
header:
  height:                 0.75in
  image_vertical_align:   2 <1>
  recto:
    center:
      content:            image:footer-logo.png[width=80]
  verso:
    center:
      content:            $header_recto_center_content
----
<1> You can use the `footer_vertical_align` attribute to slighly nudge the
image up or down.

CAUTION: By default, the image must fit in the allotted space for the running
header or footer. Otherwise, you will run into layout issues. Adjust the width
attribute accordingly using the `pdfwidth` attribute. Alternatively, you can
set the `fit` attribute to `scale-down` (e.g., `fit=scale-down`) to reduce
the image size to fit in the available space or `contain` (e.g., `fit=contain`)
to resize the image to the maximum size that will fit.
