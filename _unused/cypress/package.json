{
  "private": true,
  "name": "j1_template",
  "version": "2020.0.1",
  "description": "Gem-based Template for Jekyll",
  "homepage": "https://jekyll.one",
  "author": {
    "name": "Juergen Adams",
    "email": "jadams@jekyll-one.com",
    "url": "https://jekyll.one"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jekyll-one/j1_template/issues"
  },
  "config": {
    "bumplevel": "patch",
    "mode": "development"
  },
  "npm": {
    "loglevel": "silent",
    "prepend_nodepath": "true"
  },
  "keywords": [
    "J1",
    "Template",
    "Static",
    "Web",
    "Generator",
    "Clear",
    "Responsive",
    "Featured",
    "Gem-based"
  ],
  "scripts": {
    "app": "cross-var cross-env if-env OS=Windows_NT && npm run app-windows || npm run app-unix",
    "app-windows": "lerna run --parallel app 2>&1 | findstr INFO",
    "app-unix": "lerna run --parallel app 2>&1 | grep INFO",
    "algolia": "lerna --parallel --scope site run algolia",
    "algolia-check": "lerna --parallel --scope site run algolia-check",
    "audit": "npm audit",
    "build": "lerna run build --parallel --scope",
    "rebuild": "lerna run rebuild --parallel --scope",
    "bump": "cross-var cross-env if-env J1DOCKER=true && run-s bump-docker || run-s bump-local",
    "bump-local": "run-s -s ver && run-s -s bump-version:* && run-s -s ver",
    "bump-docker": "shx mv package-lock.json .package-lock.json && run-s -s ver && run-s -s bump-version:* && run-s -s ver && shx mv .package-lock.json package-lock.json",
    "bump-version:project": "cross-var npm version $npm_package_config_bumplevel",
    "bump-version:packages": "cross-var lerna publish --repo-version $npm_package_version --skip-npm --skip-git --force-publish --yes",
    "bump-version:ruby-gem": "cd packages/500_template_gem && cross-var bump $npm_package_config_bumplevel",
    "bump-version-no-git": "cross-var npm --no-git-tag-version version $npm_package_config_bumplevel",
    "bundle": "lerna run bundle --parallel --scope site",
    "clean": "run-p -s clean:*",
    "clean:start": "echo Cleaning up Project root files ..",
    "clean:logs": "shx rm -f *.log",
    "clean:locks": "shx rm -f *.lock && shx rm -f package-lock.json",
    "clean:packages": "echo Cleaning up all Lerna packages .. && lerna run --parallel clean",
    "clean:finished": "echo Finished.",
    "credentials": "run-s -s credential:*",
    "credential:echo": "echo Store username and password ..",
    "credential:set": "git config credential.helper store && echo Finished.",
    "cy": "npm run --silent cypress:open",
    "cypress:open": "cross-var cross-env $CYPRESS_INSTALL_BINARY=0 ./node_modules/.bin/cypress open",
    "deploy": "lerna run deploy",
    "gem": "lerna run --parallel --scope gem gem",
    "ver": "cross-var echo \"Project version: $npm_package_version\" && echo Package versions: && lerna ls && cd ./packages/500_template_gem && bump current | shx sed \"s/Current version:/Gem version:    /\"",
    "publish": "npm --silent run publish:*",
    "publish:print-current-versions": "npm run version:current",
    "publish:publish-no-npm": "lerna publish --skip-npm",
    "reset": "run-s -s reset:*",
    "reset:start": "echo Resetting J1 Development System to factory state ..",
    "reset:clean-files": "npm --silent run clean",
    "reset:clean": "echo Removing Node modules from all packages .. && lerna clean --yes",
    "reset:finished": "echo Finished.",
    "run": "lerna run --parallel",
    "setup": "npm --silent run setup-start && npm --silent run setup-base && run-s -s setup:*",
    "setup-start": "echo Setting up J1 Development System for first use ..",
    "setup-base": "echo Bootstrapping Base modules .. && echo J1 Project Base modules: > install.log && npm i --silent shx npm-run-all cross-var cross-env -D >> install.log && echo Finished.",
    "setup:env": "cross-var echo \"Configuring NODE|NPM environment ..\" && run-s -s set-env:*",
    "set-env:npm-loglevel": "cross-var cross-env npm_config_loglevel=$npm_package_npm_loglevel && cross-var echo \"LOGLEVEL: $npm_package_npm_loglevel\"",
    "set-env:npm-node-path": "cross-var cross-env  npm config set scripts-prepend-node-path=$npm_package_npm_prepend_nodepath && cross-var echo \"scripts-prepend-node-path: $npm_package_npm_prepend_nodepath\"",
    "set-env:mode": "cross-var cross-env npm_config_mode=$npm_package_config_mode && cross-var echo \"MODE:     $npm_package_config_mode\" && echo Finished.",
    "setup:node-modules": "echo Bootstrapping Project modules .. && echo J1 Project modules: >> install.log && npm install --silent >> install.log && echo Finished.",
    "setup:lerna": "echo Initialising Development packages .. && lerna init && echo Bootstrapping Lerna packages .. && lerna bootstrap && echo Finished.",
    "setup:detect-os": "echo Detecting OS .. && cross-var cross-env if-env OS=Windows_NT && cross-var echo \"OS detected as: $OS\" || OS=$(echo $(getos)) && echo \"OS detected as: $OS\"",
    "setup:links": "echo Creating links for shared resources .. && lerna run --parallel setup-links",
    "setup:build": "lerna run --parallel build",
    "site": "lerna run --parallel develop",
    "parent-script": "cross-env BUNDLE_VENDORIZE=$npm_package_jekyll_vendorize run-s -s child-script",
    "child-script": "cross-env if-env BUNDLE_VENDORIZE=true && echo bla || echo blupp"
  },
  "dependencies": {
    "css": "file:packages\\100_template_css",
    "gem": "file:packages\\500_template_gem",
    "js": "file:packages\\200_template_js",
    "netlify": "file:packages\\900_template_netlify",
    "site": "file:packages\\400_template_site",
    "src": "file:packages\\300_template_src",
    "utls": "file:packages\\600_template_utilsrv"
  },
  "optionalDependencies": {
    "fsevents": "^1.2.7"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.3.4",
    "@babel/plugin-proposal-class-properties": "^7.3.4",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.3.4",
    "@babel/preset-env": "^7.3.4",
    "@babel/preset-react": "^7.0.0",
    "@mdi/font": "^2.2.43",
    "all-contributors-cli": "^6.0.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^24.5.0",
    "babel-loader": "^8.0.5",
    "babel-plugin-emotion": "^10.0.9",
    "babel-plugin-inline-svg": "^1.0.0",
    "babel-plugin-lodash": "^3.3.4",
    "babel-plugin-module-resolver": "^3.2.0",
    "babel-plugin-transform-builtin-extend": "^1.1.2",
    "babel-plugin-transform-define": "1.3.1",
    "babel-plugin-transform-export-extensions": "^6.22.0",
    "babel-plugin-transform-inline-environment-variables": "^0.4.3",
    "body-scroll-lock": "^2.6.1",
    "bootstrap": "^4.0.0",
    "bootstrap-material-design": "^4.0.0-beta.4",
    "cache-me-outside": "^0.0.4",
    "clean-webpack-plugin": "^0.1.19",
    "clipboard": "^1.7.1",
    "copy-webpack-plugin": "^5.0.1",
    "cross-env": "^5.2.0",
    "cross-var": "^1.1.0",
    "css-loader": "^2.1.1",
    "cssnano": "^4.1.10",
    "cssnano-cli": "^1.0.5",
    "cypress": "^3.1.5",
    "dom-testing-library": "^4.0.0",
    "eslint": "^6.8.0",
    "eslint-plugin-emotion": "^10.0.7",
    "eslint-plugin-react": "^7.12.4",
    "exports-loader": "^0.7.0",
    "expose-loader": "^0.7.5",
    "extract-text-webpack-plugin": "^4.0.0-beta.0",
    "file-loader": "^1.1.11",
    "friendly-errors-webpack-plugin": "^1.7.0",
    "fuzzysearch": "^1.0.3",
    "html-webpack-plugin": "^3.2.0",
    "http-server": "^0.11.1",
    "imports-loader": "^0.8.0",
    "jest": "^24.5.0",
    "jest-cli": "^24.5.0",
    "jest-dom": "^3.1.3",
    "jest-emotion": "^10.0.9",
    "jquery": "^3.2.1",
    "jquery-mousewheel": "^3.1.13",
    "js-cookie": "^2.1.4",
    "lerna": "^3.16.4",
    "lodash-es": "^4.17.10",
    "log4javascript": "^1.4.15",
    "mini-css-extract-plugin": "^0.4.0",
    "moment": "^2.18.1",
    "ncp": "^2.0.0",
    "node-sass": "^4.12.0",
    "node-sass-tilde-importer": "^1.0.0",
    "nodegit": "^0.24.3",
    "nouislider": "^10.0.0",
    "npm-delay": "^1.0.4",
    "npm-run-all": "^4.1.5",
    "openssl": "^1.1.0",
    "opn-cli": "^5.0.0",
    "popper.js": "^1.12.6",
    "postcss-loader": "^2.1.5",
    "prettier": "1.17.0",
    "react-test-renderer": "^16.8.4",
    "react-testing-library": "^7.0.0",
    "resolve-url-loader": "^2.3.0",
    "rimraf": "^2.6.3",
    "sass-loader": "^7.0.1",
    "shx": "^0.3.2",
    "start-server-and-test": "^1.7.11",
    "style-loader": "^0.21.0",
    "stylelint": "^9.10.1",
    "stylelint-config-recommended": "^2.1.0",
    "stylelint-config-styled-components": "^0.1.1",
    "stylelint-processor-styled-components": "^1.5.2",
    "svg-inline-loader": "^0.8.0",
    "terser": "^3.14.1",
    "to-string-loader": "^1.1.5",
    "uglify-js": "^3.0.25",
    "webpack": "^4.42.0",
    "webpack-cli": "^3.3.11",
    "webpack-dev-server": "^3.10.3",
    "webpack-merge": "4.1.4",
    "zenscroll": "^4.0.0"
  }
}
